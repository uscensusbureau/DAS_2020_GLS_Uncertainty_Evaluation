[MASTER]

# A comma-separated list of package or module names from where C extensions may
# be loaded. Extensions are loading into the active Python interpreter and may
# run arbitrary code
extension-pkg-whitelist=

# Add files or directories to the blacklist. They should be base names, not
# paths.
ignore=CVS, das_decennial

# Add files or directories matching the regex patterns to the blacklist. The
# regex matches against base names, not paths.
ignore-patterns=


init-hook="import sys; sys.path += ['.',
                                    './das_decennial',
                                    './das_decennial/analysis',
                                    './das_decennial/analysis/analysis_scripts',
                                    './das_decennial/analysis/analysis_scripts/lecle301',
                                    './das_decennial/analysis/attic',
                                    './das_decennial/analysis/attic/analysis_scripts',
                                    './das_decennial/analysis/attic/other_scripts',
                                    './das_decennial/analysis/attic/other_scripts/PL94_Experiment',
                                    './das_decennial/analysis/attic/redistricting_votingage_check',
                                    './das_decennial/analysis/plotting',
                                    './das_decennial/analysis/tools',
                                    './das_decennial/analysis/vignettes',
                                    './das_decennial/analysis/vignettes/using_das_data',
                                    './das_decennial/analysis/vignettes/using_noisy_measurements',
                                    './das_decennial/analysis/vignettes/using_random_data',
                                    './das_decennial/configs',
                                    './das_decennial/configs/2018',
                                    './das_decennial/configs/CVAP_2020',
                                    './das_decennial/configs/Census1940',
                                    './das_decennial/configs/Census1940/DDP2010_Update',
                                    './das_decennial/configs/DHCH2020',
                                    './das_decennial/configs/DHCH2020/Gurobi',
                                    './das_decennial/configs/DHCH2020/Reader',
                                    './das_decennial/configs/DHCHDemoTenVac',
                                    './das_decennial/configs/DHCP2020',
                                    './das_decennial/configs/DHCP2020/Reader',
                                    './das_decennial/configs/DHCP2020/Writer',
                                    './das_decennial/configs/PL94',
                                    './das_decennial/configs/PL94_2020',
                                    './das_decennial/configs/full_household',
                                    './das_decennial/configs/full_household/Gurobi',
                                    './das_decennial/configs/full_household/Reader',
                                    './das_decennial/configs/full_person',
                                    './das_decennial/configs/full_person/Reader',
                                    './das_decennial/configs/full_person/Writer',
                                    './das_decennial/configs/lecle301',
                                    './das_decennial/configs/lecle301/PL94./configs/lecle301/PL94/DefaultReader',
                                    './das_decennial/configs/production',
                                    './das_decennial/configs/production/dhc',
                                    './das_decennial/configs/production/pl94',
                                    './das_decennial/configs/production/pl94/experiments_dec2020',
                                    './das_decennial/configs/production/pl94/experiments_dec2020/dynamic_geolevel',
                                    './das_decennial/configs/production/pl94/experiments_dec2020/dynamic_geolevel/lecle_strategy_3_1a',
                                    './das_decennial/configs/production/pl94/experiments_dec2020/dynamic_geolevel/lecle_strategy_3_1aTotIso',
                                    './das_decennial/configs/production/pl94/experiments_dec2020/dynamic_geolevel/lecle_strategy_3_1b',
                                    './das_decennial/configs/production/pl94/experiments_dec2020/dynamic_geolevel/lecle_strategy_3_1bTotIso',
                                    './das_decennial/configs/production/pl94/experiments_dec2020/dynamic_geolevel/lecle_strategy_3_1c',
                                    './das_decennial/configs/production/pl94/experiments_dec2020/dynamic_geolevel/lecle_strategy_3_1cTotIso',
                                    './das_decennial/configs/production/pl94/experiments_dec2020/dynamic_geolevel/lecle_strategy_3_1d',
                                    './das_decennial/configs/production/pl94/experiments_dec2020/dynamic_geolevel/lecle_strategy_3_1e',
                                    './das_decennial/configs/production/pl94/experiments_dec2020/dynamic_geolevel/lecle_strategy_3_1eTotIso',
                                    './das_decennial/configs/production/pl94/experiments_dec2020/dynamic_geolevel/lecle_strategy_3_1f',
                                    './das_decennial/configs/production/pl94/experiments_dec2020/dynamic_geolevel/lecle_strategy_3_1fTotIso',
                                    './das_decennial/configs/production/pl94/experiments_dec2020/dynamic_geolevel/lecle_strategy_3_2a',
                                    './das_decennial/configs/production/pl94/experiments_dec2020/dynamic_geolevel/lecle_strategy_3_2aTotIso',
                                    './das_decennial/configs/production/pl94/experiments_dec2020/dynamic_geolevel/lecle_strategy_3_2b',
                                    './das_decennial/configs/production/pl94/experiments_dec2020/dynamic_geolevel/lecle_strategy_3_2bTotIso',
                                    './das_decennial/configs/production/pl94/experiments_dec2020/dynamic_geolevel/lecle_strategy_3_2c',
                                    './das_decennial/configs/production/pl94/experiments_dec2020/dynamic_geolevel/lecle_strategy_3_2cTotIso',
                                    './das_decennial/configs/production/pl94/experiments_dec2020/dynamic_geolevel/lecle_strategy_3_2e',
                                    './das_decennial/configs/production/pl94/experiments_dec2020/dynamic_geolevel/lecle_strategy_3_2eTotIso',
                                    './das_decennial/configs/production/pl94/experiments_dec2020/dynamic_geolevel/lecle_strategy_3_2f',
                                    './das_decennial/configs/production/pl94/experiments_dec2020/dynamic_geolevel/lecle_strategy_3_2fTotIso',
                                    './das_decennial/configs/production/pl94/experiments_dec2020/dynamic_geolevel/lecle_strategy_3_detailed',
                                    './das_decennial/configs/production/pl94/experiments_dec2020/dynamic_geolevel/lecle_strategy_3_tot_detailed',
                                    './das_decennial/configs/production/pl94/ppmf_april2021',
                                    './das_decennial/configs/production/pl94/ppmf_april2021/unit05eps_per4eps',
                                    './das_decennial/configs/production/pl94/ppmf_april2021/unit1_9eps_per10_3eps',
                                    './das_decennial/configs/production/pl94/ppmf_oct2020',
                                    './das_decennial/configs/production/pl94/ppmf_oct2020/aian_discrete_unit05eps_per4eps',
                                    './das_decennial/configs/production/pl94/ppmf_oct2020/aian_discrete_unit4eps_per15eps',
                                    './das_decennial/configs/production/pl94/ppmf_oct2020/aian_geometric_unit05eps_per4eps',
                                    './das_decennial/configs/production/pl94/ppmf_oct2020/aian_geometric_unit4eps_per15eps',
                                    './das_decennial/configs/production/pl94/ppmf_oct2020/nonaian_discrete_unit05eps_per4eps',
                                    './das_decennial/configs/production/pl94/ppmf_oct2020/nonaian_discrete_unit4eps_per15eps',
                                    './das_decennial/configs/production/pl94/ppmf_oct2020/nonaian_geometric_unit05eps_per4eps',
                                    './das_decennial/configs/production/pl94/ppmf_oct2020/nonaian_geometric_unit4eps_per15eps',
                                    './das_decennial/configs/tests',
                                    './das_decennial/das_framework',
                                    './das_decennial/das_framework/certificate',
                                    './das_decennial/das_framework/certificate/texfiles',
                                    './das_decennial/das_framework/ctools',
                                    './das_decennial/das_framework/ctools/latex-windows',
                                    './das_decennial/das_framework/ctools/schema',
                                    './das_decennial/das_framework/ctools/schema/tests',
                                    './das_decennial/das_framework/ctools/tests',
                                    './das_decennial/das_framework/ctools/tests/hcf_test',
                                    './das_decennial/das_framework/ctools/tests/hcf_test/child',
                                    './das_decennial/das_framework/ctools/tests/test_files',
                                    './das_decennial/das_framework/hooks',
                                    './das_decennial/das_framework/tests',
                                    './das_decennial/etc',
                                    './das_decennial/etc/hhtype',
                                    './das_decennial/jenkins',
                                    './das_decennial/latex_docs',
                                    './das_decennial/manualInvariantChecks',
                                    './das_decennial/programs',
                                    './das_decennial/programs/constraints',
                                    './das_decennial/programs/constraints/tests',
                                    './das_decennial/programs/engine',
                                    './das_decennial/programs/engine/tests',
                                    './das_decennial/programs/experiment',
                                    './das_decennial/programs/geographic_spines',
                                    './das_decennial/programs/invariants',
                                    './das_decennial/programs/invariants/tests',
                                    './das_decennial/programs/metrics',
                                    './das_decennial/programs/metrics/tests',
                                    './das_decennial/programs/nodes',
                                    './das_decennial/programs/nodes/tests',
                                    './das_decennial/programs/optimization',
                                    './das_decennial/programs/optimization/tests',
                                    './das_decennial/programs/python_dvs',
                                    './das_decennial/programs/python_dvs/cli',
                                    './das_decennial/programs/python_dvs/cli/plugins',
                                    './das_decennial/programs/python_dvs/cli/plugins/tests',
                                    './das_decennial/programs/python_dvs/daemon',
                                    './das_decennial/programs/python_dvs/demo',
                                    './das_decennial/programs/python_dvs/doc',
                                    './das_decennial/programs/python_dvs/dvs',
                                    './das_decennial/programs/python_dvs/inprogress',
                                    './das_decennial/programs/python_dvs/sql',
                                    './das_decennial/programs/python_dvs/tests',
                                    './das_decennial/programs/queries',
                                    './das_decennial/programs/queries/tests',
                                    './das_decennial/programs/reader',
                                    './das_decennial/programs/reader/cef_2020',
                                    './das_decennial/programs/reader/cvap',
                                    './das_decennial/programs/reader/ipums_1940',
                                    './das_decennial/programs/reader/reader_tests',
                                    './das_decennial/programs/schema',
                                    './das_decennial/programs/schema/attributes',
                                    './das_decennial/programs/schema/attributes/dhch',
                                    './das_decennial/programs/schema/schemas',
                                    './das_decennial/programs/schema/table_building',
                                    './das_decennial/programs/schema/tests',
                                    './das_decennial/programs/strategies',
                                    './das_decennial/programs/strategies/tests',
                                    './das_decennial/programs/tests',
                                    './das_decennial/programs/utilities',
                                    './das_decennial/programs/validator',
                                    './das_decennial/programs/workload',
                                    './das_decennial/programs/writer',
                                    './das_decennial/programs/writer/cef_2020',
                                    './das_decennial/programs/writer/ipums_1940',
                                    './das_decennial/programs/writer/tests',
                                    './das_decennial/relative_errors_data',
                                    './das_decennial/release_doc',
                                    './das_decennial/scripts',
                                    './das_decennial/tests',
                                    './das_decennial/tests/analysis',
                                    './das_decennial/toy_examples_and_test_methods',
                                    './das_decennial/toy_examples_and_test_methods/lecle301',
                                    '/usr/lib/spark/python',
                                    '/usr/lib/spark/python/lib/py4j-src.zip',
                                    '/mnt/das_python'];"

# Use multiple processes to speed up Pylint.
jobs=1

# List of plugins (as comma separated values of python modules names) to load,
# usually to register additional checkers.
load-plugins=

# Pickle collected data for later comparisons.
persistent=yes

# Specify a configuration file.
#rcfile=

# Allow loading of arbitrary C extensions. Extensions are imported into the
# active Python interpreter and may run arbitrary code.
unsafe-load-any-extension=no


[MESSAGES CONTROL]

# Only show warnings with the listed confidence levels. Leave empty to show
# all. Valid levels: HIGH, INFERENCE, INFERENCE_FAILURE, UNDEFINED
confidence=

# Disable the message, report, category or checker with the given id(s). You
# can either give multiple identifiers separated by comma (,) or put this
# option multiple times (only on the command line, not in the configuration
# file where it should appear only once).You can also use "--disable=all" to
# disable everything first and then reenable specific checks. For example, if
# you want to run only the similarities checker, you can use "--disable=all
# --enable=similarities". If you want to run only the classes checker, but have
# no Warning level messages displayed, use"--disable=all --enable=classes
# --disable=W"
#disable=print-statement,parameter-unpacking,unpacking-in-except,old-raise-syntax,backtick,long-suffix,old-ne-operator,old-octal-literal,import-star-module-level,raw-checker-failed,bad-inline-option,locally-disabled,locally-enabled,file-ignored,suppressed-message,useless-suppression,deprecated-pragma,apply-builtin,basestring-builtin,buffer-builtin,cmp-builtin,coerce-builtin,execfile-builtin,file-builtin,long-builtin,raw_input-builtin,reduce-builtin,standarderror-builtin,unicode-builtin,xrange-builtin,coerce-method,delslice-method,getslice-method,setslice-method,no-absolute-import,old-division,dict-iter-method,dict-view-method,next-method-called,metaclass-assignment,indexing-exception,raising-string,reload-builtin,oct-method,hex-method,nonzero-method,cmp-method,input-builtin,round-builtin,intern-builtin,unichr-builtin,map-builtin-not-iterating,zip-builtin-not-iterating,range-builtin-not-iterating,filter-builtin-not-iterating,using-cmp-argument,eq-without-hash,div-method,idiv-method,rdiv-method,exception-message-attribute,invalid-str-codec,sys-max-int,bad-python3-import,deprecated-string-function,deprecated-str-translate-call
disable=all
# Enable the message, report, category or checker with the given id(s). You can
# either give multiple identifier separated by comma (,) or put this option
# multiple time (only on the command line, not in the configuration file where
# it should appear only once). See also the "--disable" option for examples.
enable=W0702,W0703,E0603,E0604,E0103,E0104,E0116,E0601,E0401,E0602,E0116,E0110,E0114



[REPORTS]

# Python expression which should return a note less than 10 (10 is the highest
# note). You have access to the variables errors warning, statement which
# respectively contain the number of errors / warnings messages and the total
# number of statements analyzed. This is used by the global evaluation report
# (RP0004).
evaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)

# Template used to display messages. This is a python new-style format string
# used to format the message information. See doc for all details
#msg-template=

# Set the output format. Available formats are text, parseable, colorized, json
# and msvs (visual studio).You can also give a reporter class, eg
# mypackage.mymodule.MyReporterClass.
output-format=text

# Tells whether to display a full report or only the messages
reports=no

# Activate the evaluation score.
score=yes


[REFACTORING]

# Maximum number of nested blocks for function / method body
max-nested-blocks=5


[VARIABLES]

# List of additional names supposed to be defined in builtins. Remember that
# you should avoid to define new builtins when possible.
additional-builtins=

# Tells whether unused global variables should be treated as a violation.
allow-global-unused-variables=yes

# List of strings which can identify a callback function by name. A callback
# name must start or end with one of those strings.
callbacks=cb_,_cb

# A regular expression matching the name of dummy variables (i.e. expectedly
# not used).
dummy-variables-rgx=_+$|(_[a-zA-Z0-9_]*[a-zA-Z0-9]+?$)|dummy|^ignored_|^unused_

# Argument names that match this expression will be ignored. Default to name
# with leading underscore
ignored-argument-names=_.*|^ignored_|^unused_

# Tells whether we should check for unused import in __init__ files.
init-import=no

# List of qualified module names which can have objects that can redefine
# builtins.
redefining-builtins-modules=six.moves,future.builtins


[FORMAT]

# Expected format of line ending, e.g. empty (any line ending), LF or CRLF.
expected-line-ending-format=

# Regexp for a line that is allowed to be longer than the limit.
ignore-long-lines=^\s*(# )?<?https?://\S+>?$

# Number of spaces of indent required inside a hanging  or continued line.
indent-after-paren=4

# String used as indentation unit. This is usually "    " (4 spaces) or "\t" (1
# tab).
indent-string='    '

# Maximum number of characters on a single line.
max-line-length=150

# Maximum number of lines in a module
max-module-lines=1000

# List of optional constructs for which whitespace checking is disabled. `dict-
# separator` is used to allow tabulation in dicts, etc.: {1  : 1,\n222: 2}.
# `trailing-comma` allows a space between comma and closing bracket: (a, ).
# `empty-line` allows space-only lines.
no-space-check=trailing-comma,dict-separator

# Allow the body of a class to be on the same line as the declaration if body
# contains single statement.
single-line-class-stmt=no

# Allow the body of an if to be on the same line as the test if there is no
# else.
single-line-if-stmt=no


[LOGGING]

# Logging modules to check that the string format arguments are in logging
# function parameter format
logging-modules=logging


[TYPECHECK]

# List of decorators that produce context managers, such as
# contextlib.contextmanager. Add to this list to register other decorators that
# produce valid context managers.
contextmanager-decorators=contextlib.contextmanager

# List of members which are set dynamically and missed by pylint inference
# system, and so shouldn't trigger E1101 when accessed. Python regular
# expressions are accepted.
generated-members=

# Tells whether missing members accessed in mixin class should be ignored. A
# mixin class is detected if its name ends with "mixin" (case insensitive).
ignore-mixin-members=yes

# This flag controls whether pylint should warn about no-member and similar
# checks whenever an opaque object is returned when inferring. The inference
# can return multiple potential results while evaluating a Python object, but
# some branches might not be evaluated, which results in partial inference. In
# that case, it might be useful to still emit no-member and other checks for
# the rest of the inferred objects.
ignore-on-opaque-inference=yes

# List of class names for which member attributes should not be checked (useful
# for classes with dynamically set attributes). This supports the use of
# qualified names.
ignored-classes=optparse.Values,thread._local,_thread._local

# List of module names for which member attributes should not be checked
# (useful for modules/projects where namespaces are manipulated during runtime
# and thus existing member attributes cannot be deduced by static analysis. It
# supports qualified module names, as well as Unix pattern matching.
ignored-modules=gurobipy,numpy,numpy.random,PyPDF2,temptestenginemodule,pywintypes,win32com.client,hdmm,pymysql

# Show a hint with possible names when a member name was not found. The aspect
# of finding the hint is based on edit distance.
missing-member-hint=yes

# The minimum edit distance a name should have in order to be considered a
# similar match for a missing member name.
missing-member-hint-distance=1

# The total number of similar names that should be taken in consideration when
# showing a hint for a missing member.
missing-member-max-choices=1


[SPELLING]

# Spelling dictionary name. Available dictionaries: none. To make it working
# install python-enchant package.
spelling-dict=

# List of comma separated words that should not be checked.
spelling-ignore-words=

# A path to a file that contains private dictionary; one word per line.
spelling-private-dict-file=

# Tells whether to store unknown words to indicated private dictionary in
# --spelling-private-dict-file option instead of raising a message.
spelling-store-unknown-words=no


[BASIC]

# Naming hint for argument names
argument-name-hint=(([a-z][a-z0-9_]{2,30})|(_[a-z0-9_]*))$

# Regular expression matching correct argument names
argument-rgx=(([a-z][a-z0-9_]{2,30})|(_[a-z0-9_]*))$

# Naming hint for attribute names
attr-name-hint=(([a-z][a-z0-9_]{2,30})|(_[a-z0-9_]*))$

# Regular expression matching correct attribute names
attr-rgx=(([a-z][a-z0-9_]{2,30})|(_[a-z0-9_]*))$

# Bad variable names which should always be refused, separated by a comma
bad-names=foo,bar,baz,toto,tutu,tata

# Naming hint for class attribute names
class-attribute-name-hint=([A-Za-z_][A-Za-z0-9_]{2,30}|(__.*__))$

# Regular expression matching correct class attribute names
class-attribute-rgx=([A-Za-z_][A-Za-z0-9_]{2,30}|(__.*__))$

# Naming hint for class names
class-name-hint=[A-Z_][a-zA-Z0-9]+$

# Regular expression matching correct class names
class-rgx=[A-Z_][a-zA-Z0-9]+$

# Naming hint for constant names
const-name-hint=(([A-Z_][A-Z0-9_]*)|(__.*__))$

# Regular expression matching correct constant names
const-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__))$

# Minimum line length for functions/classes that require docstrings, shorter
# ones are exempt.
docstring-min-length=-1

# Naming hint for function names
#function-name-hint=(([a-z][a-z0-9_]{2,30})|(_[a-z0-9_]*))$
# NONDEFAULT
function-name-hint=[a-z][a-zA-Z0-9]+$

# Regular expression matching correct function names
#function-rgx=(([a-z][a-z0-9_]{2,30})|(_[a-z0-9_]*))$
# NONDEFAULT
function-rgx=[a-z][a-zA-Z0-9]+$

# Good variable names which should always be accepted, separated by a comma
#good-names=i,j,k,ex,Run,_
# NONDEFAULT
good-names=i,j,k,ex,Run,y,x,_

# Include a hint for the correct naming format with invalid-name
include-naming-hint=no

# Naming hint for inline iteration names
inlinevar-name-hint=[A-Za-z_][A-Za-z0-9_]*$

# Regular expression matching correct inline iteration names
inlinevar-rgx=[A-Za-z_][A-Za-z0-9_]*$

# Naming hint for method names
# method-name-hint=(([a-z][a-z0-9_]{2,30})|(_[a-z0-9_]*))$
# NONDEFAULT
method-name-hint=[a-z][a-zA-Z0-9]+$

# Regular expression matching correct method names
# method-rgx=(([a-z][a-z0-9_]{2,30})|(_[a-z0-9_]*))$
# NONDEFAULT
method-rgx=_{0,2}[a-z][a-zA-Z0-9]+_{0,2}$

# Naming hint for module names
#module-name-hint=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$
# NONDEFAULT
module-name-hint=([a-z][a-z_]*[a-z])$

# Regular expression matching correct module names
#module-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$
# NONDEFAULT
module-rgx=([a-z][a-z_]*[a-z])$

# Colon-delimited sets of names that determine each other's naming style when
# the name regexes allow several styles.
name-group=

# Regular expression which should only match function or class names that do
# not require a docstring.
no-docstring-rgx=^_

# List of decorators that produce properties, such as abc.abstractproperty. Add
# to this list to register other decorators that produce valid properties.
property-classes=abc.abstractproperty

# Naming hint for variable names
variable-name-hint=(([a-z][a-z0-9_]{2,30})|(_[a-z0-9_]*))$

# Regular expression matching correct variable names
variable-rgx=(([a-z][a-z0-9_]{2,30})|(_[a-z0-9_]*))$


[SIMILARITIES]

# Ignore comments when computing similarities.
ignore-comments=yes

# Ignore docstrings when computing similarities.
ignore-docstrings=yes

# Ignore imports when computing similarities.
ignore-imports=no

# Minimum lines number of a similarity.
min-similarity-lines=4


[MISCELLANEOUS]

# List of note tags to take in consideration, separated by a comma.
notes=FIXME,XXX,TODO


[CLASSES]

# List of method names used to declare (i.e. assign) instance attributes.
defining-attr-methods=__init__,__new__,setUp

# List of member names, which should be excluded from the protected access
# warning.
exclude-protected=_asdict,_fields,_replace,_source,_make

# List of valid names for the first argument in a class method.
valid-classmethod-first-arg=cls

# List of valid names for the first argument in a metaclass class method.
valid-metaclass-classmethod-first-arg=mcs


[IMPORTS]

# Allow wildcard imports from modules that define __all__.
allow-wildcard-with-all=no

# Analyse import fallback blocks. This can be used to support both Python 2 and
# 3 compatible code, which means that the block might have code that exists
# only in one or another interpreter, leading to false positives when analysed.
analyse-fallback-blocks=no

# Deprecated modules which should not be used, separated by a comma
deprecated-modules=optparse,tkinter.tix

# Create a graph of external dependencies in the given file (report RP0402 must
# not be disabled)
ext-import-graph=

# Create a graph of every (i.e. internal and external) dependencies in the
# given file (report RP0402 must not be disabled)
import-graph=

# Create a graph of internal dependencies in the given file (report RP0402 must
# not be disabled)
int-import-graph=

# Force import order to recognize a module as part of the standard
# compatibility libraries.
known-standard-library=

# Force import order to recognize a module as part of a third party library.
known-third-party=enchant


[DESIGN]

# Maximum number of arguments for function / method
max-args=5

# Maximum number of attributes for a class (see R0902).
max-attributes=7

# Maximum number of boolean expressions in a if statement
max-bool-expr=5

# Maximum number of branch for function / method body
max-branches=12

# Maximum number of locals for function / method body
max-locals=15

# Maximum number of parents for a class (see R0901).
max-parents=7

# Maximum number of public methods for a class (see R0904).
max-public-methods=20

# Maximum number of return / yield for function / method body
max-returns=6

# Maximum number of statements in function / method body
max-statements=50

# Minimum number of public methods for a class (see R0903).
min-public-methods=2


[EXCEPTIONS]

# Exceptions that will emit a warning when being caught. Defaults to
# "Exception"
overgeneral-exceptions=builtins.Exception
